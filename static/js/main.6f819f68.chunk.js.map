{"version":3,"sources":["components/Section/Section.jsx","components/Button/Button.styled.jsx","components/Button/Button.jsx","components/AddContact/AddContactForm.styled.jsx","components/AddContact/AddContactForm.jsx","components/AddContact/AddContact.jsx","components/Contacts/FindContact.jsx","components/Contacts/Contacts.styled.jsx","components/Contacts/ContactItem.jsx","components/Contacts/ContactList.jsx","components/App/App.styled.jsx","components/App/App.jsx","hooks/useLocalStorage.jsx","index.js"],"names":["Section","title","children","ButtonPhonebook","styled","button","Button","type","onClick","Form","form","Input","input","Label","label","AddContactForm","inputForms","handleChange","handleSubmit","onSubmit","map","id","name","pattern","required","htmlFor","placeholder","onChange","event","target","value","AddContact","useState","setName","number","setNumber","reset","e","currentTarget","preventDefault","newContact","uuidv4","FindContact","findContact","ItemListContact","li","ItemContact","span","List","ul","ContactItem","props","contactDelete","ContactList","contacts","Container","div","App","key","defaultValue","JSON","parse","window","localStorage","getItem","state","setState","useEffect","setItem","stringify","useLocalStorage","setContacts","filter","setFilter","normalizedFilter","toLowerCase","contact","includes","getListContact","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6f819f68.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const Section = ({ title, children }) => (\r\n  <div>\r\n    <h2>{title}</h2>\r\n    {children}\r\n  </div>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.element.isRequired,\r\n};\r\n","import styled from '@emotion/styled';\r\n\r\nexport const ButtonPhonebook = styled.button`\r\n  padding: 10px;\r\n  width: 150px;\r\n  margin: 20px 15px 15px 15px;\r\n  border: 1px solid rgb(42, 136, 136);\r\n\r\n  &:focus {\r\n    background-color: rgb(42, 136, 136);\r\n    color: white;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { ButtonPhonebook } from './Button.styled';\r\n\r\nexport const Button = ({ title, type, onClick }) => (\r\n  <ButtonPhonebook type={type} onClick={onClick}>\r\n    {title}\r\n  </ButtonPhonebook>\r\n);\r\n\r\nButton.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  onClick: PropTypes.func.isRequired,\r\n};\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Form = styled.form`\r\n  width: 50%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  text-transform: capitalize;\r\n  border: 2px solid #333333;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  padding: 10px;\r\n  border: 1px solid rgb(42, 136, 136);\r\n  outline: none;\r\n  &: focus {\r\n    border: 5px solid rgb(42, 136, 136);\r\n  } ;\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  padding: 15px 15px 0px 15px;\r\n`;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Button } from \"../Button/Button\";\r\nimport { Form, Input, Label } from \"./AddContactForm.styled\";\r\n\r\nexport const AddContactForm = ({ inputForms, handleChange, handleSubmit }) => {\r\n  return (\r\n    <Form onSubmit={handleSubmit}>\r\n      {inputForms.map(({ id, type, name, pattern, title, required }) => (\r\n        <Label htmlFor={id} key={name}>\r\n          <h3>{name}</h3>\r\n          <Input\r\n            id={id}\r\n            type={type}\r\n            name={name}\r\n            pattern={pattern}\r\n            title={title}\r\n            required={required}\r\n            placeholder={name}\r\n            onChange={(event) => handleChange({ name }, event.target.value)}\r\n          />\r\n        </Label>\r\n      ))}\r\n      <Button title=\"Add contact\" type=\"submit\" />\r\n    </Form>\r\n  );\r\n};\r\n\r\nAddContactForm.propTypes = {\r\n  inputForms: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      type: PropTypes.string.isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      pattern: PropTypes.string.isRequired,\r\n      title: PropTypes.string.isRequired,\r\n      required: PropTypes.string.isRequired,\r\n      placeholder: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n};\r\n","import { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport inputForms from \"../data/inputForms.json\";\r\nimport { AddContactForm } from \"./AddContactForm\";\r\n\r\nexport default function AddContact({ onSubmit }) {\r\n  // const [id, setId] = useState(\"\");\r\n  const [name, setName] = useState(\"\");\r\n  const [number, setNumber] = useState(\"\");\r\n\r\n  const handleChange = ({ name }, value) => {\r\n    switch (name) {\r\n      case \"name\":\r\n        setName(() => value);\r\n        break;\r\n      case \"number\":\r\n        setNumber(() => value);\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const newContact = {\r\n      id: uuidv4(),\r\n      name: name,\r\n      number: number,\r\n    };\r\n    onSubmit(newContact);\r\n    reset(e);\r\n  };\r\n  const reset = (e) => {\r\n    setName(\"\");\r\n    setNumber(\"\");\r\n    e.currentTarget.name.value = \"\";\r\n    e.currentTarget.number.value = \"\";\r\n  };\r\n\r\n  return (\r\n    <AddContactForm\r\n      inputForms={inputForms}\r\n      handleChange={handleChange}\r\n      handleSubmit={handleSubmit}\r\n    />\r\n  );\r\n}\r\n// export class AddContact extends Component {\r\n//   state = {\r\n//     id: \"\",\r\n//     name: \"\",\r\n//     number: \"\",\r\n//   };\r\n\r\n//   handleChange = ({ name }, value) => {\r\n//     this.setState({ [name]: value, id: uuidv4() });\r\n//   };\r\n\r\n//   handleSubmit = (e) => {\r\n//     e.preventDefault();\r\n//     this.props.onSubmit(this.state);\r\n//     this.reset(e);\r\n//   };\r\n\r\n//   reset = (e) => {\r\n//     this.setState({ id: \"\", name: \"\", number: \"\" });\r\n//     e.currentTarget.name.value = \"\";\r\n//     e.currentTarget.number.value = \"\";\r\n//   };\r\n\r\n//   render() {\r\n//     return (\r\n//       <AddContactForm\r\n//         inputForms={inputForms}\r\n//         handleChange={handleChange}\r\n//         handleSubmit={this.handleSubmit}\r\n//       />\r\n//     );\r\n//   }\r\n// }\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Input } from '../AddContact/AddContactForm.styled';\r\n\r\nexport const FindContact = ({ title, findContact }) => (\r\n  <div>\r\n    <h3>{title}</h3>\r\n    <Input type=\"text\" onChange={event => findContact(event)} />\r\n  </div>\r\n);\r\n\r\nFindContact.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n","import styled from '@emotion/styled';\r\n\r\nexport const ItemListContact = styled.li`\r\n  display: flex;\r\n  align-items: center;\r\n  list-style: none;\r\n`;\r\n\r\nexport const ItemContact = styled.span`\r\n  min-width: 150px;\r\n`;\r\n\r\nexport const List = styled.ul`\r\n  padding: 0px;\r\n  font-size: 20px;\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button } from '../Button/Button';\r\nimport { ItemListContact, ItemContact } from './Contacts.styled';\r\nexport const ContactItem = props => {\r\n  const { id, name, number, contactDelete } = props;\r\n  return (\r\n    <ItemListContact key={id}>\r\n      <ItemContact>{name}:</ItemContact>\r\n      <ItemContact>{number}</ItemContact>\r\n      <Button\r\n        title={'Delete'}\r\n        type=\"button\"\r\n        onClick={() => contactDelete(id)}\r\n      />\r\n    </ItemListContact>\r\n  );\r\n};\r\n\r\nContactItem.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  number: PropTypes.number.isRequired,\r\n  contactDelete: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { ContactItem } from './ContactItem';\r\nimport { List } from './Contacts.styled';\r\n\r\nexport const ContactList = props => {\r\n  const { contacts, contactDelete } = props;\r\n  return (\r\n    <List>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <ContactItem\r\n          id={id}\r\n          name={name}\r\n          number={number}\r\n          contactDelete={contactDelete}\r\n        />\r\n      ))}\r\n    </List>\r\n  );\r\n};\r\n\r\nContactList.propTypes = {\r\n  contacts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.func,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.number.isRequired,\r\n    }),\r\n  ),\r\n};\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Container = styled.div`\r\n  padding: 15px;\r\n`;\r\n","import { Section } from \"../Section/Section\";\r\nimport AddContact from \"../AddContact/AddContact\";\r\nimport { FindContact } from \"../Contacts/FindContact\";\r\nimport { ContactList } from \"../Contacts/ContactList\";\r\nimport { Container } from \"./App.styled\";\r\nimport { useState } from \"react\";\r\nimport useLocalStorage from \"../../hooks/useLocalStorage\";\r\n\r\nexport default function App() {\r\n  const [contacts, setContacts] = useLocalStorage(\"contacts\", []);\r\n  const [filter, setFilter] = useState(\"\");\r\n\r\n  const getListContact = () => {\r\n    const normalizedFilter = filter.toLowerCase();\r\n\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(normalizedFilter)\r\n    );\r\n  };\r\n\r\n  const contactSubmit = (newContact) => {\r\n    setContacts([newContact, ...contacts]);\r\n  };\r\n  const findContact = (e) => {\r\n    setFilter(e.currentTarget.value);\r\n  };\r\n  const contactDelete = (contactId) => {\r\n    setContacts((contacts) =>\r\n      contacts.filter((contact) => contact.id !== contactId)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <h1>Phonebook</h1>\r\n      <Section title={\"\"}>\r\n        <AddContact onSubmit={contactSubmit} />\r\n      </Section>\r\n      <Section title={\"Contacts\"}>\r\n        <FindContact\r\n          title={\"Find contacts by name\"}\r\n          findContact={findContact}\r\n        />\r\n        <ContactList\r\n          contacts={getListContact()}\r\n          contactDelete={contactDelete}\r\n        />\r\n      </Section>\r\n    </Container>\r\n  );\r\n}\r\n// export class App extends Component {\r\n//   state = {\r\n//     contacts: [\r\n//       { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n//       { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n//       { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n//       { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n//     ],\r\n//     filter: \"\",\r\n//   };\r\n//   componentDidMount() {\r\n//     const contacts = localStorage.getItem(\"contacts\");\r\n//     const parsedContacts = JSON.parse(contacts);\r\n\r\n//     if (parsedContacts) {\r\n//       this.setState({ contacts: parsedContacts });\r\n//     }\r\n//   }\r\n\r\n//   componentDidUpdate(prevProps, prevState) {\r\n//     if (this.state.contacts !== prevState.contacts) {\r\n//       localStorage.setItem(\"contacts\", JSON.stringify(this.state.contacts));\r\n//     }\r\n//   }\r\n\r\n//   contactSubmit = (newContact) => {\r\n//     this.setState(({ contacts }) => ({ contacts: [newContact, ...contacts] }));\r\n//   };\r\n\r\n//   contactDelete = (contactId) => {\r\n//     this.setState((prevState) => ({\r\n//       contacts: prevState.contacts.filter(\r\n//         (contact) => contact.id !== contactId\r\n//       ),\r\n//     }));\r\n//   };\r\n\r\n//   findContact = (e) => {\r\n//     this.setState({ filter: e.currentTarget.value });\r\n//   };\r\n\r\n//   getListContact = () => {\r\n//     const { filter, contacts } = this.state;\r\n//     const normalizedFilter = filter.toLowerCase();\r\n\r\n//     return contacts.filter((contact) =>\r\n//       contact.name.toLowerCase().includes(normalizedFilter)\r\n//     );\r\n//   };\r\n\r\n//   render() {\r\n//     const contactsList = this.getListContact();\r\n//     return (\r\n//       <Container>\r\n//         <h1>Phonebook</h1>\r\n//         <Section title={\"\"}>\r\n//           <AddContact onSubmit={this.contactSubmit} />\r\n//         </Section>\r\n//         <Section title={\"Contacts\"}>\r\n//           <FindContact\r\n//             title={\"Find contacts by name\"}\r\n//             findContact={this.findContact}\r\n//           />\r\n//           <ContactList\r\n//             contacts={contactsList}\r\n//             contactDelete={this.contactDelete}\r\n//           />\r\n//         </Section>\r\n//       </Container>\r\n//     );\r\n//   }\r\n// }\r\n","import { useState, useEffect } from \"react\";\r\n\r\nexport default function useLocalStorage(key, defaultValue) {\r\n  const [state, setState] = useState(() => {\r\n    return JSON.parse(window.localStorage.getItem(key)) ?? defaultValue;\r\n  });\r\n  useEffect(() => {\r\n    window.localStorage.setItem(key, JSON.stringify(state));\r\n  }, [key, state]);\r\n  return [state, setState];\r\n}\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App/App.jsx\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}